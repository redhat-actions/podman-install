# /**********************************************************************
#  * Copyright (C) 2025 Red Hat, Inc.
#  *
#  * Licensed under the Apache License, Version 2.0 (the "License");
#  * you may not use this file except in compliance with the License.
#  * You may obtain a copy of the License at
#  *
#  * http://www.apache.org/licenses/LICENSE-2.0
#  *
#  * Unless required by applicable law or agreed to in writing, software
#  * distributed under the License is distributed on an "AS IS" BASIS,
#  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  * See the License for the specific language governing permissions and
#  * limitations under the License.
#  *
#  * SPDX-License-Identifier: Apache-2.0
#  ***********************************************************************/

name: "Install Podman"
description: "Installs Podman on Linux, or a specific/latest version on Windows."

inputs:
  ubuntu-version:
    description: "The Ubuntu version codename for the Kubic repository."
    required: false
    default: "23.10"
  podman-version-input:
    description: "Podman version for Windows. Use 'latest' or a specific version (e.g. '5.6.2')."
    required: false
    default: "latest"

runs:
  using: "composite"
  steps:
    - name: Update podman to 5.x on Linux
      if: runner.os == 'Linux'
      shell: bash
      run: |
        ubuntu_version='${{ inputs.ubuntu-version }}'
        echo "INFO: Using Ubuntu version '${ubuntu_version}' for Kubic repository."

        echo "INFO: Adding Kubic repository..."
        sudo sh -c "echo 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_${ubuntu_version}/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list"
        curl -fsSL "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_${ubuntu_version}/Release.key" | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/kubic.gpg

        echo "INFO: Updating package list..."
        sudo apt-get update -qq

        echo "INFO: Installing CRIU dependencies..."
        sudo apt-get install --allow-unauthenticated -qq -y libprotobuf32t64 python3-protobuf libnet1

        echo "INFO: Installing CRIU manually..."
        curl -sLO http://archive.ubuntu.com/ubuntu/pool/universe/c/criu/criu_3.16.1-2_amd64.deb && sudo dpkg -i criu_3.16.1-2_amd64.deb

        echo "INFO: Installing Podman..."
        sudo apt-get -qq -y install --allow-unauthenticated podman || {
          echo "WARN: Primary installation failed. Trying fallback repository..."
          sudo sh -c "echo 'deb http://ftp.lysator.liu.se/pub/opensuse/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_${ubuntu_version}/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list"
          curl -fsSL "http://ftp.lysator.liu.se/pub/opensuse/repositories/devel:/kubic:/libcontainers:/unstable/xUbuntu_${ubuntu_version}/Release.key" | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/kubic-fallback.gpg
          sudo apt-get --allow-insecure-repositories update -qq
          sudo apt-get --allow-unauthenticated -y install podman
        }

        echo "INFO: Podman installation complete."
        podman version

    - name: Fetch Podman Download URL for Windows
      if: runner.os == 'Windows'
      id: fetch-podman-url
      uses: redhat-actions/podman-install/.github/actions/fetch-latest-podman-version-windows@e4b1fa48c45110617d0ae3a995b81428f4234d96
      with:
        version_input: ${{ inputs.podman-version-input || 'latest' }}
        file_type: 'setup.exe'

    - name: Install Podman on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        $downloadUrl = "${{ steps.fetch-podman-url.outputs.download_url }}"
        $podmanVersion = "${{ steps.fetch-podman-url.outputs.version }}"

        $versionNumber = $podmanVersion -replace '^v'
        $fileName = "podman-$versionNumber-setup.exe"

        echo "Installing Podman version $podmanVersion..."
        echo "Downloading from $downloadUrl file $fileName"
        curl --output $fileName -L $downloadUrl

        Start-Process -FilePath ".\$fileName" -ArgumentList "/install", "/passive", "/norestart", "/log podman-logs.txt" -Wait
        Get-Content podman-logs.txt

    - name: Initialize Podman Machine on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        echo "Adding Podman to PATH for this session..."
        $env:PATH += ";C:\Program Files\RedHat\Podman"
        podman --version
        echo "Initializing Podman machine..."
        podman machine init --now
